// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract StudentData {
    // Structure to store student details
    struct Student {
        uint256 id;
        string name;
        string department;
    }

    // Dynamic array of students
    Student[] public students;

    // Add student details
    function addStudent(uint256 _id, string memory _name, string memory _dept) external {
        students.push(Student(_id, _name, _dept));
    }

    // Get student details by ID
    function getStudent(uint256 _id) external view returns (string memory, string memory) {
        for (uint i = 0; i < students.length; i++) {
            if (students[i].id == _id) {
                return (students[i].name, students[i].department);
            }
        }
        return ("Not Found", "Not Found");
    }

    // Fallback function (required by problem)
    fallback() external payable {}

    // Receive function (accepts Ether if sent)
    receive() external payable {}
}
